# NOTE - Look into -R option for ld to reference IP

SRC_PATH:=src_cd

# path to all files to be included on the output disc
DISC_PATH:=dist

BOOT_DIR:=boot



MMD_WORDRAM:=test.def

MMD_WORDRAM:=$(addprefix $(SRC_PATH)/,$(MMD_WORDRAM))

MMD_WORDRAM_OUT:=$(addprefix $(BUILD_PATH)/, $(MMD_WORDRAM:.def=.out))

MMD_SRC:=$(wildcard $(SRC_PATH)/*.[cs])

MMD_OBJ:=$(MMD_SRC:.c=.o)
MMD_OBJ:=$(MMD_OBJ:.s=.o)
MMD_OBJ:=$(addprefix $(BUILD_PATH)/,$(MMD_OBJ))
MMD_SYMBOLS:=$(MMD_OBJ:.o=_symbols.txt)


MMD_WORDRAM_SRC:=$(addprefix $(SRC_PATH)/, $(MMD_WORDRAM_SRC))

MMD_BIN:=$(addprefix $(DISC_PATH)/,$(notdir $(MMD_WORDRAM_OUT:.out=.mmd)))




# this is the filename used for source code or resources for 
# the Initial Program (IP) and System Program (SP)
# These should generally not be changed, but if you must, be sure to update 
# boot.s to the new filenames as well.

IP:=ip
SP:=sp

IP_SRC:=$(wildcard $(SRC_PATH)/boot/$(IP).[cs])
#IP_SRC+=$(SRC_PATH)/$(IP).s

IP_OBJ:=$(IP_SRC:.c=.o)
IP_OBJ:=$(IP_OBJ:.s=.o)
IP_OBJ:=$(addprefix $(BUILD_PATH)/, $(IP_OBJ))

IP_BIN:=$(IP_OBJ:.o=.bin)
IP_OUT:=$(IP_OBJ:.o=.out)
IP_SYMBOLS:=$(IP_OBJ:.o=_symbols.txt)

SP_SRC:=$(wildcard $(SRC_PATH)/boot/$(SP).[cs])
#SP_SRC+=$(SRC_PATH)/$(SP).s

SP_OBJ:=$(SP_SRC:.c=.o)
SP_OBJ:=$(SP_OBJ:.s=.o)
SP_OBJ:=$(addprefix $(BUILD_PATH)/, $(SP_OBJ))

SP_BIN:=$(SP_OBJ:.o=.bin)
SP_OUT:=$(SP_OBJ:.o=.out)
SP_SYMBOLS:=$(SP_OBJ:.o=_symbols.txt)

BOOT_SRC:=$(SRC_PATH)/boot/boot.s
BOOT_OBJ:=$(addprefix $(BUILD_PATH)/, $(BOOT_SRC:.s=.o))
BOOT_BIN:=$(BOOT_OBJ:.o=.bin)

all: disc
default: disc



.PHONY: clean

clean: clean_mmd clean_boot clean_disc

clean_mmd:
	@rm -rf $(MMD_OBJ) $(MMD_WORDRAM_OUT) $(MMD_SYMBOLS)
	
clean_ip:
	@rm -rf $(IP_OBJ) $(IP_OUT) $(IP_BIN) $(IP_SYMBOLS)

clean_sp:
	@rm -rf $(SP_OBJ) $(SP_OUT) $(SP_BIN) $(SP_SYMBOLS)

clean_boot: clean_ip clean_sp
	@rm -rf $(BOOT_OBJ) $(BOOT_BIN)

clean_disc:
	@rm -rf $(BUILD_PATH)/$(PROJECT_NAME).iso

ip: $(IP_BIN)

sp: $(SP_BIN)

boot: ip sp $(BOOT_BIN)

mmd: $(MMD_OBJ) $(MMD_BIN)

disc: mmd boot $(BUILD_PATH)/$(PROJECT_NAME).iso

$(BUILD_PATH)/$(PROJECT_NAME).iso: $(BOOT_BIN)
	mkisofs -iso-level 1 -G $< -pad -V "$(PROJECT_NAME)" -o $@ $(DISC_PATH)

$(MMD_BIN): $(MMD_WORDRAM_OUT)
		$(OBJCPY) -O binary $< $@

$(MMD_WORDRAM_OUT): $(MMD_WORDRAM)
	$(AS) $(AS_FLAGS) $(INC) $(LIB_PATH)/mmd_header.s -o$(BUILD_PATH)/$(SRC_PATH)/mmd_header.o
	$(LD) $(LD_FLAGS) -T $(CFG_PATH)/mmd.ld -o $@ $(BUILD_PATH)/$(SRC_PATH)/mmd_header.o $(addprefix $(BUILD_PATH)/$(SRC_PATH)/,$(subst .s,.o,$(subst .c,.o,$(shell cat $(MMD_WORDRAM)))))
	$(NM) -n $@ > $(MMD_WORDRAM_OUT:.out=_symbols.txt)

$(IP_OUT): $(IP_OBJ)
	$(LD) $(LD_FLAGS) -T $(CFG_PATH)/ip.ld -o $@ $<
	$(NM) -n $@ > $(IP_SYMBOLS)

$(IP_BIN): $(IP_OUT)
	$(OBJCPY) -O binary $< $@

$(SP_OUT): $(SP_OBJ)
	$(LD) $(LD_FLAGS) -T $(CFG_PATH)/sp.ld -o $@ $<
	$(NM) -n $@ > $(SP_SYMBOLS)

$(SP_BIN): $(SP_OUT)
	$(OBJCPY) -O binary $< $@

$(BOOT_BIN): $(BOOT_OBJ)
	$(OBJCPY) -O binary $< $@

$(BUILD_PATH)/%.o: %.c
	$(CC) $(CC_FLAGS) $(INC) -c $< -o $@

$(BUILD_PATH)/%.o: %.s
	$(AS) $(AS_FLAGS) $(INC) $< -o $@

$(BUILD_PATH)/$(PROJECT).iso: $(BUILD_PATH)/$(BOOTBIN)
	mkisofs -iso-level 1 -G $< -pad -V "$(PROJECT)" -o $@ $(DISC_DIR)

#$(BUILD_PATH)/boot.out: $(BUILD_PATH)/sp.bin $(BUILD_PATH)/ip.bin
#	$(AS) $(DEF_FLAGS_AS) $(BOOT_DIR)/boot.s -o $@

#$(BUILD_PATH)/$(BOOTBIN): $(BUILD_PATH)/boot.out
#	$(OBJCPY) -O binary $< $@

#$(BUILD_PATH)/sp.bin: $(BUILD_PATH)/$(BOOT_DIR)/sp.o
#	$(LD) $(DEF_FLAGS_LD) -T $(CFG_DIR)/sp.ld -o $@ $<

#$(BUILD_PATH)/ip.bin: $(BUILD_PATH)/$(BOOT_DIR)/ip.o
#	$(LD) $(DEF_FLAGS_LD) -T $(CFG_DIR)/ip.ld -o $@ $<

$(BUILD_PATH)/boot_symbols.txt: $(BUILD_PATH)/boot.out
	$(NM) -n $< > $@
	
